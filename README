   
My Tiny Crypto Blockchain Simulators
====================================
Copyright (c) 2018 dmitrynizh

These simulators are very simple toys, yet succeed in demonstrating
many concepts of digital currency, peer-to-peer distributed consensus
mechanisms, secure hashing, digital signatures, public key
cryptography.

Each Java file in this repo is standalone (independent).  Currently, 3
files are simulators - BlockChain.java, CryptoBlockChain.java and
Mine.java - and the rest are utilities. Coding style in the simulator
files is deliberately somewhat terse because originally this
initiative was a long, cold winter weekend's project, and the
motivation was to try to fit some non-trivial blockchain functionality
into smallest possible number of lines using modern Java idioms and
features (lambdas, map/reduce streams). Mine.java came out first
followed by p2p network BlockChain and based on it cryptographic
CryptoBlockChain. At that time, upon completion, the line count was:
 
Mine.java             :  90 lines
BlockChain.java       : 100 lines
CryptoBlockChain.java : 160 lines

As CryptoBlockChain is expected to get more updates, its line count
will increase perhaps substantially as for the sake of clarity, there
is a benefit in adding some verbosity and commentary. Still the goal
is to keep it strictly under 300 lines, standalone (depending only on
JavaSE jars).


File Mine.java
--------------------------
Compile:   % javac Mine.java
Run:       $ java Mine <difficulty> <previous-block-header-bytes> <file-with-transactions>

Mine tries to find the hash for the next block containing <difficulty>
leading hex zeroes, continuously increasing nonce and periodically
checking that SHA-256 hash of byte array containing
<previous-block-header-bytes>, Merkle root hash of all transactions
from <file-with-transactions> and 4 bytes of the nonce counter. The
hash , elapsed time and hash rate are printed out when hash is found.
Mine the files about once every second, updating the cache when new
content arrives.

File BlockChain.java
--------------------------
Compile:   % javac BlockChain.java
Run:       $ java BlockChain

This is a very simple peer-to-peer network based on Java UDP
protocols. Each node runs two threads, one 'mines' and another listens
to incoming messages. Any cryptography was deliberately left out from
this simulator and it substitutes cryptographic proof-of-work with
random sleep intervals. In many other aspects, the nodes function as
described in in the Bitcoin White Paper [1], build distributed
blockchain and and maintain consensus by accepting longest
proof-of-work (in a form of 'proof-of-sleep') and verifying
transactions. After specified number of blocks was created, each node
terminates, saving the blockchain ledger to the disk. The consensus is
demonstrated when all such files are essentially identical.

The nodes accept a new block after verifying that it extends the last
one and checking that it does nor include transaction already included
into the chain.

You can alter the default behavior by providing optional command line
parameters as integers:
 
  $ java BlockChain <node-count> <coin-difficulty> <block-count>

Example:

  $ java BlockChain 20 5 30 

File CryptoBlockChain.java
--------------------------
This is the most complex simulator in this repo. It simulates, in real
time, the workings of a secure and distributed cryptographic
blockchain based on proof-of-work as outlined in the Bitcoin White
Paper [1].  

To compile and run this simulator, you need Java 8 or newer.

Compile:   % javac CryptoBlockChain.java
Run:       $ java CryptoBlockChain

You can alter the default behavior by providing optional command line
parameters as integers:
 
  $ java CryptoBlockChain <node-count> <coin-difficulty> <mining-batch> <chain-length>

Where:

  <node-count>       - How many nodes are in the p2p network. Each node  continuously
                       mines new blocks. Default is 7 nodes.
  <coin-difficulty>  - Miners seek for that many zeros in block hash values 
                       they generate. Default is 6. Values above 10 are 
                       interpreted as zero bit count.
  <mining-batch>     - Miners make random choices to generate from 
                       0 to 10M * <mining-batch> hashes without being 
                       interrupted by new blocks/transactions. Default is 1.
  <chain-length>     - a.k.a block height. The network shuts down after 
                       that many blocks were added to the chain. 
                       Default is 20. If something is wrong and new block 
                       are consistently regected, the network shuts down 
                       after 2x that many blocks were minted.

Examples:

  $ java CryptoBlockChain 15 
  $ java CryptoBlockChain  7 6 1 30
  $ java CryptoBlockChain  7 50 1 30 # as above but with extra two zero bits

The parameters <coin-difficult>y and <mining-batch> are somewhat
coupled; in a system with many nodes and transactions it is rarely
possible to mine with high difficulty in a small number of iterations
before accepting new transactions and blocks.

When the network reaches the chain-length goal, nodes start shutting
down. Each node saves its blockchain ledger onto the disk.  The
consensus is demonstrated when all such files are essentially
identical. 

The functioning of CryptoBlockChain is mainly as described in the
Bitcoin White Paper[1] and it can be viewed as a 'cleanroom'
implementation of that.  Specifically, the key mechanisms described in
chapters 4-6, 9 and 10 are implemented precisely as described:

  "4. Proof-of-Work
  ...The proof-of-work involves scanning for a value that when hashed,
  such as with SHA-256, the hash begins with a number of zero bits.  For
  our timestamp network, we implement the proof-of-work by incrementing
  a nonce in the block until a value is found that gives the block's
  hash the required zero bits."
  
  "5. Network
  The steps to run the network are as follows:
  1) New transactions are broadcast to all nodes.
  2) Each node collects new transactions into a block.
  3) Each node works on finding a difficult proof-of-work for its block.
  4) When a node finds a proof-of-work, it broadcasts the block to all nodes.
  5) Nodes accept the block only if all transactions in it are valid and not 
     already spent.
  6) Nodes express their acceptance of the block by working on creating
     the next block in the chain, using the hash of the accepted block
     as the previous hash.
  
  Nodes always consider the longest chain to be the correct one and will
  keep working on extending it. If two nodes broadcast different
  versions of the next block simultaneously, some nodes may receive one
  or the other first. In that case, they work on the first one they
  received, but save the other branch in case it becomes longer. The tie
  will be broken when the next proof-of-work is found and one branch
  becomes longer."

  "6. Incentive
  
  ..the first transaction in a block is a special transaction that
  starts a new coin owned by the creator of the block. This adds an
  incentive for nodes to support the network, and provides a way to
  initially distribute coins into circulation... The incentive can also be funded
  with transaction fees. If the output value of a transaction is less
  than its input value, the difference is a transaction fee that is
  added to the incentive value of the block containing the
  transaction."

  "9. Combining and Splitting Value
  Although it would be possible to handle coins individually, it would be unwieldy to make a
  separate transaction for every cent... Normally there will a single input
  from a larger previous transaction or multiple inputs combining smaller amounts, and at most two
  outputs: one for the payment, and one returning the change, if any, back to the sender."*
  *) see (2) below.

  "10. Privacy
  As an additional firewall, a new key pair should be used for each transaction to keep them
  from being linked to a common owner."

At the moment, some mechanisms mentioned in the paper are omitted or
simplified:

(1) No multiple input transactions (chapter 9) yet.
    Currently, CryptoBlockChain supports txns with single input and two outputs.
(2) In each process started as described above, all nodes start and 
    terminate at once  and maintain consensus.  When multiple processes run, 
    nodes can join and leave the common network at will, however late-comer
    nodes can not yet request a missing block or current blockchain (chapter 5). 
    This currently does not allow to establish consensus across separate processes
    that connect at different times to the same p2p network.
(3) Spent transactions can't be pruned as described in ch.7, and in fact, 
    Merkle trees are not currently kept.
(4) Consequently, "Simplified payment verification" (chapter 8) is not implemented.
(5) Mining reward is fixed at 50 btc and does not become smaller as chain grows.
(6) Mining difficulty is set initially and does not yet adjust automatically 
    to control mining rates (chapter 4).

All these limitations can be fairly easily removed in future updates
time permitting.  Priority will be given in the order listed above - 1
has highest priority followed by 2 and so on.

No attempt was made to copycat any implementational details of real
Bitcoin Core or Clients, Wallets, APIs, any protocols, binary layouts,
representations, 'address' size and structure etc.  The goal was to
produce a cleanroom simulator based solely on what is specified in
[1], with simple and direct representation, adequate but not
over-optimized for performance. Hence, for instance, packets are
sequences of space separated words and not byte streams, and
'addresses' are public keys, not hashes of them as in 'real' Bitcoin
of later releases. As [1] does not outline wallets, a node's wallet is
a simple collection of pk/sk pairs objects, not a sophisticated asset
manager. Notable exceptions are (1) use of Bitcoin flavor of ECDSA for
public keys and (2) use of base58. Initially, hashes and keys were
printed out in base64 but I found that base58 is much more pleasant to
deal with, hence only block hashes are printed out in base64.  Another
correlation with real implementations is FORTH-like processing of
white-space separated packet data. After getting familiar with [1] and
also hearing about Etherium contracts being programs [2], and being a
FORTH enthusiast since mid-1980s [4], I felt natural to view the
TXN/BLN/MINT packet formats, being space separated "words", as some
fragments of simplified FORTH code. To my great surprise, later on I
found that the official engine runs a fairly extensive set of
FORTH-like opcodes, see[4].

At the moment the nodes in CryptoBlockChain broadcast the following
messages:

Transaction 1-out  :  TXN <stamp> <prev-txn> <addr-in> <sum> <addr-out> 0.000 _  SIG <signature>
Transaction 2-out  :  TXN <stamp> <prev-txn> <addr-in> <sum1> <addr-out1> <sum2> <addr-out2> SIG <signature>
Newly minted block :  BLN <hash> <prev-hash> <nonce> ... 
                          MINT ... <sum> <address> ... <signature> 
                          TXN ... *
Halting broadcast  :  ALL HALT AND DUMP
Asking for a block :  BL? <height/prevhash>
Block from chain   :  BLC same as BLN with <height> and <next-hash>* before <hash>

The format of TXN and BLN packets still evolve, and best can be seen
as some kind of whitespace separated FORTH-like code to be split onto
words and interpreted, with TXN, BLN, MINT, SIG and other uppercase
keywords being predefined IDs treated as immediately executable
'commands', and the rest treated as 'data' that maybe consumed from an
array of words directly or pushed onto a stack.

In the screen logs below, base58 <signature> and <pk> strings are
abbreviated with only leading and trailing 6 characters displayed and
... in between. This is done to save screen output. Block hashes are
in hex and not abbreviated. The output saved in ledger files is not
abbreviated.

Sample log:

$ 
$ javac CryptoBlockChain.java
$ java CryptoBlockChain 8 49 1 40
node3> BLN
00000026084157d5fbbc658c5502f366c7b0e3538309b2e91c9d5587d9ae3abe
00
1291279 1520217334115
| MINT new coins mBTC= aSq9DsNN...dFVtV6r4 50000 aSq9DsNN...dFVtV6r4 mining reward SIG 381yXZA9...ugTMW42S 
;
node3> BLN
0000004af7041db0c682d04a6bec1085fc7fadc76a85c319ba5596dcbb5d6bce
00000026084157d5fbbc658c5502f366c7b0e3538309b2e91c9d5587d9ae3abe
7102252 1520217345759
| MINT new coins mBTC= aSq9DsNN...H6newTrW 50000 aSq9DsNN...H6newTrW mining reward SIG iKx1CJP2...PEX9nHJ1 
;
node0> BLN
0000000aa33366d01c0cc0de8c101099099ec9e92122eef92df341c651577b92
0000004af7041db0c682d04a6bec1085fc7fadc76a85c319ba5596dcbb5d6bce
1895543 1520217353728
| MINT new coins mBTC= aSq9DsNN...C841y1rA 50000 aSq9DsNN...C841y1rA mining reward SIG AN1rKvt5...CEB61Qmz 
;
node5> BLN
00000061898ce900d0acbf8fef25dc99f1ea591a550efb674b7d1fee09ca8301
0000000aa33366d01c0cc0de8c101099099ec9e92122eef92df341c651577b92
11463270 1520217388267
| MINT new coins mBTC= aSq9DsNN...rzzw32rn 50000 aSq9DsNN...rzzw32rn mining reward SIG 381yXZTn...1y6YxnnM 
;
node1> BLN
000000007688255e6eb179b7f91c87111863a78bd0c439b5adb4b9608c36760d
00000061898ce900d0acbf8fef25dc99f1ea591a550efb674b7d1fee09ca8301
1893945 1520217394014
| MINT new coins mBTC= aSq9DsNN...RzDuaxBE 50000 aSq9DsNN...RzDuaxBE mining reward SIG AN1rKvtD...wvbAqRMi 
;
node5>posted new craigslist ad: aSq9DsNN...67Mq8LqW 48437 Services
node4> BLN
0000000fba6d0ed427db365fa939eab554e40016a1902c976a930889d3903af4
000000007688255e6eb179b7f91c87111863a78bd0c439b5adb4b9608c36760d
2297951 1520217405540
| MINT new coins mBTC= aSq9DsNN...4gUcub69 50000 aSq9DsNN...4gUcub69 mining reward SIG iKx1CJNn...yDPc7TPq 
;
node5>posted new craigslist ad: aSq9DsNN...EDUQfGoR 37603 Services
node7> BLN
000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
0000000fba6d0ed427db365fa939eab554e40016a1902c976a930889d3903af4
11679968 1520217433800
| MINT new coins mBTC= aSq9DsNN...KmBpz3vv 50000 aSq9DsNN...KmBpz3vv mining reward SIG 381yXYxB...tzdZsxYZ 
;
node4>posted new craigslist ad: aSq9DsNN...uXYZSqAy 33256 Sell Merchandise
node5> BLN
000000222084aa7f90a5f876807208a5da3d0bbb9c19bcd7150eb769dd0f624a
0000000fba6d0ed427db365fa939eab554e40016a1902c976a930889d3903af4
16070374 1520217439821
| MINT new coins mBTC= aSq9DsNN...fddKq3vi 50000 aSq9DsNN...fddKq3vi mining reward SIG iKx1CJN3...6aEqArFh 
;
node3> TXN 18:37:22 5 E4TY82oq...jLWddB3B aSq9DsNN...dFVtV6r4 48437 aSq9DsNN...67Mq8LqW 1117 aSq9DsNN...y2G2UAL5 SIG AN1rKvtM...gUSiPetx
node0>posted new craigslist ad: aSq9DsNN...UoLkoJLS 46227 Sell Merchandise
node5> TXN 18:37:41 5 MXn6PMhc...BiUtWziY aSq9DsNN...Uc6KpyQF 33256 aSq9DsNN...uXYZSqAy 16710 aSq9DsNN...Uc6KpyQF SIG 381yXYtK...i81cbu4V
node4>posted new craigslist ad: aSq9DsNN...4ydk6x1n 34383 Sell Merchandise
node0> BLN
0000004e5810027f123f62f0bab00140cc0aa7971bacb34b576bea687885a607
000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
544137 1520217454961
| MINT new coins mBTC= aSq9DsNN...eHDnBPXo 50446 aSq9DsNN...eHDnBPXo mining reward SIG iKx1CJNr...z2eJNek7 
, TXN 18:37:22 5 E4TY82oq...jLWddB3B aSq9DsNN...dFVtV6r4 48437 aSq9DsNN...67Mq8LqW 1117 aSq9DsNN...y2G2UAL5 SIG AN1rKvtM...gUSiPetx 
;
node3> TXN 18:37:53 5 BSYCy51T...qk3jQXHs aSq9DsNN...H6newTrW 37603 aSq9DsNN...EDUQfGoR 12244 aSq9DsNN...opfw7MjP SIG iKx1CJNz...hoFUo7xb
node1> BLN
00000018534f45016c83b6e8b23099cd22daccb19076742fd7dc3e74b48020dd
000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
5578074 1520217463419
| MINT new coins mBTC= aSq9DsNN...EFSVzARr 50446 aSq9DsNN...EFSVzARr mining reward SIG iKx1CJNf...rxXpbtog 
, TXN 18:37:22 5 E4TY82oq...jLWddB3B aSq9DsNN...dFVtV6r4 48437 aSq9DsNN...67Mq8LqW 1117 aSq9DsNN...y2G2UAL5 SIG AN1rKvtM...gUSiPetx 
;
node7> BLN
00000071a58a06f1c0f59f1a10ac7fbf581d5e5f04c5d525c869176d3b2198f3
000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
9414501 1520217470596
| MINT new coins mBTC= aSq9DsNN...NNcRHtfv 50446 aSq9DsNN...NNcRHtfv mining reward SIG iKx1CJMT...kjnL9KGf 
, TXN 18:37:22 5 E4TY82oq...jLWddB3B aSq9DsNN...dFVtV6r4 48437 aSq9DsNN...67Mq8LqW 1117 aSq9DsNN...y2G2UAL5 SIG AN1rKvtM...gUSiPetx 
;
node4> BLN
0000001673e8e5bc7ce32df94dbc43f30491e885dca00a08871cf5f1c4d18f17
000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
10428486 1520217472109
| MINT new coins mBTC= aSq9DsNN...4ydk6x1n 50446 aSq9DsNN...4ydk6x1n mining reward SIG iKx1CJMS...CBN8BuQw 
, TXN 18:37:22 5 E4TY82oq...jLWddB3B aSq9DsNN...dFVtV6r4 48437 aSq9DsNN...67Mq8LqW 1117 aSq9DsNN...y2G2UAL5 SIG AN1rKvtM...gUSiPetx 
;
node6>posted new craigslist ad: aSq9DsNN...jjyvHLNR 34386 Services
...
...
node4> BLN
00000031bb1e4f3616bd56181c912748b1aa076a450857bffbeff1c46386f211
0000000816674b0630ea1015e9b40c5faf427068c47932b1a8d81b612dd11585
515322 1520217802184
| MINT new coins mBTC= aSq9DsNN...5dMLETqH 50009 aSq9DsNN...5dMLETqH mining reward SIG iKx1CJQ9...ZZ3mKHwn 
, TXN 18:43:04 7 73MjZ3pJ...mkRePMrz aSq9DsNN...y2G2UAL5 607 aSq9DsNN...YyaZ4MfQ 506 aSq9DsNN...w1Yobuqg SIG AN1rKvtL...Qu8PsmfL 
, TXN 18:43:13 5 CiDZiJtv...gwzX7SkX aSq9DsNN...jjyvHLNR 607 aSq9DsNN...YyaZ4MfQ 33774 aSq9DsNN...6djX8SGR SIG AN1rKvtJ...xXftTWU2 
;
...
node6> BLN
00000071edf5c803547d94004572c778a2e1b067ede87d1869732204fda700a3
000000254c79acd315d7aa25bb0f8261d4a05c36a662d9af2e141ec675c05fce
1927874 1520217972165
| MINT new coins mBTC= aSq9DsNN...EWELnFAZ 50192 aSq9DsNN...EWELnFAZ mining reward SIG AN1rKrAh...hbmkeXpY 
, TXN 18:45:54 5 9a3ALFcA...Pybg6x6F aSq9DsNN...EDUQfGoR 22016 aSq9DsNN...G2iiMuSd 15446 aSq9DsNN...hhfPXKXG SIG AN1rKvt4...Q9L6Gb2e 
, TXN 18:46:02 5 FksM5avz...ffVm27KH aSq9DsNN...ojdQMM7v 19789 aSq9DsNN...NGF6kz2b 30458 aSq9DsNN...oKLqobu9 SIG AN1rKrFw...G9NetjXV 
;
node5> listener exiting.
node6> listener exiting.
node7> listener exiting.
node1> listener exiting.
node4> listener exiting.
node5> ALL HALT AND DUMP
node6> sender exiting.
node0> listener exiting.
node2> listener exiting.
node3> listener exiting.
node5> sender exiting.
...
$

In the log most long base-58 hash strings are truncated to save some screen space. The values that go into 
blockchain ledgers are not truncated.

This particular run results in 8 ledgers - blockchain0.txt, blockchain1.txt, etc
- saved to current directory, one for each node.  All ledgers are
identical and list the blocks that were accepted by the nodes:

Mined: Sun Mar 04 18:35:34 PST 2018
 hash: 00000026084157d5fbbc658c5502f366c7b0e3538309b2e91c9d5587d9ae3abe
 prev: 00
nonce: 1291279
 txns:
E4TY82oqSE484WgGvU548QKoPE5kfNQrkTazjLWddB3B:MINT new coins mBTC= aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJ24rVH5MxgF5eQByaCvPe1YsG9AA7vWKjkBEv5QqcBPirt3bBmCP2V5zAcDfjMLRxj2zMmkEdLYZT1nadFVtV6r4 50000 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJ24rVH5MxgF5eQByaCvPe1YsG9AA7vWKjkBEv5QqcBPirt3bBmCP2V5zAcDfjMLRxj2zMmkEdLYZT1nadFVtV6r4 mining reward SIG 381yXZA9QLxQzdPEMmbtenFtfXQbU7oGaURjdCec4gC9MM7QqW4hDLtWwuEYvXFyuegaM9U1t8ifjcpk61cjS8rjugTMW42S 

Mined: Sun Mar 04 18:35:45 PST 2018
 hash: 0000004af7041db0c682d04a6bec1085fc7fadc76a85c319ba5596dcbb5d6bce
 prev: 00000026084157d5fbbc658c5502f366c7b0e3538309b2e91c9d5587d9ae3abe
nonce: 7102252
 txns:
BSYCy51TQbA1Cpf8qdA6VjBAuc11H2UCkVurqk3jQXHs:MINT new coins mBTC= aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJfuLqXFuJ5bMcSHWPDCyeHMavveyxXgSLt7t9TGe5HHvvMBu49Fx5qYkd9FiNYjGfB1NibYGUwsPijrRH6newTrW 50000 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJfuLqXFuJ5bMcSHWPDCyeHMavveyxXgSLt7t9TGe5HHvvMBu49Fx5qYkd9FiNYjGfB1NibYGUwsPijrRH6newTrW mining reward SIG iKx1CJP2nzjQjrQMxAhJsVjZi6LDf8d63ENMzW4R94bt5pwqfkqptQQF9dekXYsmhxaJCCZrZibWKMQzgbY6r83bkEPEX9nHJ1 

...


Mined: Sun Mar 04 18:37:34 PST 2018
 hash: 0000004e5810027f123f62f0bab00140cc0aa7971bacb34b576bea687885a607
 prev: 000000005eac666e98a6de7315cf07441bbb74be89f4882a81837abcc0bbd2d2
nonce: 544137
 txns:
ETzDxtfxWgm2KM85HKfNgb8scz9PouRcHCGvwUi9BXAo:MINT new coins mBTC= aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTKXydK9dP4dvVJoLrGkYZzAABvqQBiXSS1X3MJKUFCfq6dZs4sciifzKMSncF3CwVvVDrXCEVZRgNgpuXeHDnBPXo 50446 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTKXydK9dP4dvVJoLrGkYZzAABvqQBiXSS1X3MJKUFCfq6dZs4sciifzKMSncF3CwVvVDrXCEVZRgNgpuXeHDnBPXo mining reward SIG iKx1CJNrfnzp3muPNYnQFrycjzfpC5CFgWF2Z9YeiJdX963RcrRACahH97aWLGV1Rur2ny88w8F8uhrTUNLsoNXuRez2eJNek7 
73MjZ3pJJSzJsjzvzw4anws24GLVVfEU2AuCmkRePMrz:TXN 18:37:22 5 E4TY82oqSE484WgGvU548QKoPE5kfNQrkTazjLWddB3B aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJ24rVH5MxgF5eQByaCvPe1YsG9AA7vWKjkBEv5QqcBPirt3bBmCP2V5zAcDfjMLRxj2zMmkEdLYZT1nadFVtV6r4 48437 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTKGgGqt1AGSiZd5FpDZdwRVbkkdRHQKwJgBgChypSgUitow6VPyEWTEVWCtwAq4PjvFehgHEBazGkviov67Mq8LqW 1117 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHdcLA6Rx688YfDqozNwFVcZTCGcPkajt2XUUYxr4bDLJCKbvwwAi75bCzfHyY63jhTBFdhf2J4uy2n4Ty2G2UAL5 SIG AN1rKvtMpswKWyxECkYua3uBp8YB7JM4xgJLXbeyGtcy8ZhzzMxWc9ruxUn5D4njFGyxXNuaJv5LEX4tWoNJHTwj7gUSiPetx 

.....

Mined: Sun Mar 04 18:40:06 PST 2018
 hash: 00000055de59772cdf69b96e682926efa67d790b568991a8dfb98b5517dbd05a
 prev: 000000081245e587016e2cc6e6d75aae66e59f913271c1a99c52c85cf06adc0e
nonce: 4015168
 txns:
FS896xiR5FYWoZwR3iWSYpRGryyTwWLGioTAr5eR1Cu5:MINT new coins mBTC= aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTF1bWYcHM3JwT3XWPSCG1zvV4Mr5eNuXvWGVE2vNbPwarSn5pgsKri7DcPhqoSsgNEB2RbbBE1MycZqztp2uv9vxP 50371 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTF1bWYcHM3JwT3XWPSCG1zvV4Mr5eNuXvWGVE2vNbPwarSn5pgsKri7DcPhqoSsgNEB2RbbBE1MycZqztp2uv9vxP mining reward SIG 381yXYyUKjVb6zmLCZQdNhRotHXWForABf637VNB8UJqni1wuydFtDExqXNAvc1N5wHCQwR6XSKwE8rWWoqEfZ6g2uuVxnx6 
AFifb1gbKgCob11cTNch2TyGh5Z8YmPTVKkssjFSzKnY:TXN 18:39:24 5 HvnmGNDCE66gUvjeQ8rMThouJd9zTjMkeYzMMbAzQT8e aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJXRH9Cq2LqQwGN1jDoXpsgRnRQHsW83SZZD7id4qRZrYSU3HnBVmFNjvQVYC6t9ssfPFxsMmP2SpCMd8RzDuaxBE 38731 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTKjAtJUsrPyh1BdVUZtUSYjG8ESugb75J7M9ANt3Pvp6mVkkux3PQy4fu8A3Qruehw1A5Lo3SrDYuVeDhs4Lvnhhi 10901 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHCzmHVH55nqmYtttYavZV7AE8WTGgXXdU89rUNPPW17HeqHZEpCmVGvD7a5je6u8qekjZtN7WoCWJacQULs7z3dj SIG AN1rKvtRypoTapsW69pZxBagAf4LYJw16hXTfHQ338eomjgu88vooqVBGxRSGUcmqnf26qD8zr6rU3YNjktinULWyHnd9dkdp 
CiDZiJtvRHuWBsCN36YoxGFQkqxRMw9J9snQgwzX7SkX:TXN 18:39:26 5 MXn6PMhctVwq9iySpQ2pSguPV7h5gFGk3vDBiUtWziY aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGHGYsvFu6BEWyq7JaCPgNpbwcDW7GC81dzfMz1fCQhsfL4rkPWf3PooKVTSmLkRhXvkM6Azdghv4FLArrzzw32rn 34386 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGsDKbWzcfXcrH4uvKBXUNHhxzqgM2hK725TCvpGcA2CYus2PjcyLRyVDVjJFxZQu2SEsdoz2Wfqvyj66jjyvHLNR 15611 aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTG6XxEDiexckfWQZSz9czBPP7atzbz534JvicpRS9e1vZtZJfCqaYC7wmxrnZ3Z2YS2omwRyGxgCfrzic7Xtw4U4B SIG AN1rKvtV4MyvVqy8cXCPgSBpQARFXgRZGXkT9j48jBYpmSNgiLy4E18aW7ZX2YK6FB3THnM59sFi79fFCrWh88bBh4L3FiiHE 

....

Wallet balances and accounting are saved in files
balanceN.txt. From file balance3.txt:

At Sun Mar 04 18:35:34 PST 2018 my BTC balance: 50.000 
...
At Sun Mar 04 18:37:27 PST 2018 my BTC balance: 100.000 
...
At Sun Mar 04 18:37:52 PST 2018 my BTC balance: 51.117 
...

Wallet balances
you have available mBTC: 27119 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJTpkUSNs64XeZrTgqSHKrXCfAwyT41v6wnNxnZiYmBjobwCZAaxduojMHytwLQyKAEfSe5J7DyrLR5LTFWGbeqom.
you have available mBTC: 506 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHRUbb9qiDYAgkAcNzB7gJqmgjivtQfUddRha9zuUKu1uzJMHTDWHSqRLyaVnJ7uyQPC1aXPXPupUS6rEw1Yobuqg.
you have available mBTC: 35221 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHQV5SY7vb8PUSoCigTJTBTGYYWmhVGuF2yJsJpD1dVSzbxsfWkXvnAYDhMeqe98wd8njLXKFQWPHWz82EhR1NVqY.
you have available mBTC: 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGpPHcbefyGcf6N5Drw3mzxJWUzYnJHrGbkaRk7Vi4JRDgwCLVkQ6tcJRvHjYsoo8sALqEpBd4qXc4zxX8nwruCLq.
you have available mBTC: 3314 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGXaeHRxEnYmVFssAhPhAAQ8spwLEoWvg6gdueKmgnrewzxp4gPBNUqgdoLnrvQ3dkLRNe3zVbMrS4kA7vxMVVNjt.
you have available mBTC: 22016 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTFD6ECsmXvGD3oKhLhTcvNabhbem3bQH9hg8EXmctETkwJCemEhAw2x8Et5xLFeFgsqjt2xnGiuPmbNKLG2iiMuSd.
you have available mBTC: 1749 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGZgqKkgTa6j76SeqUFcyLEKCW5EcGJ23yN4BSwU5LNKWapaFLRfoaUJaLVhFbEYtAnvsQHMzAjo3jqpNcXnBgigy.
you have available mBTC: 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTK1s5fDpSUoDZYV4siVvT31VVug4zGgHUidPnkgktSeF9RtLUMk2xh26bN4d7n745CiJmjrkiw1sYow35wwZmd7VJ.

Spending history
you spent|redeemed mBTC: 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJ24rVH5MxgF5eQByaCvPe1YsG9AA7vWKjkBEv5QqcBPirt3bBmCP2V5zAcDfjMLRxj2zMmkEdLYZT1nadFVtV6r4.
you spent|redeemed mBTC: 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTJfuLqXFuJ5bMcSHWPDCyeHMavveyxXgSLt7t9TGe5HHvvMBu49Fx5qYkd9FiNYjGfB1NibYGUwsPijrRH6newTrW.
you spent|redeemed mBTC: 1117 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHdcLA6Rx688YfDqozNwFVcZTCGcPkajt2XUUYxr4bDLJCKbvwwAi75bCzfHyY63jhTBFdhf2J4uy2n4Ty2G2UAL5.
you spent|redeemed mBTC: 12244 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTKV6vXvGCZfsevZbDUQwVRJJYrpNq4qh9UdMNDEcM2dJigwv2FSw7ZTi5hS9tzfCZ6EaKbWzYa2dyvSHFopfw7MjP.
you spent|redeemed mBTC: 50000 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTGRQLdJUZRhJV6jdt1gPsB6MQy6EgRBcnHaoALWzgA3wW3DyiM4rxXZtjJxzKKqz58NYaVsGBxRrpQRooaR3ACMpw.
you spent|redeemed mBTC: 50046 on key aSq9DsNNvGhYxYyqA9wd2eduEAZ5AXWgJTbTHZFbyMAD5cUbw87AHWNY6X3YnACScq7zMDnF7XR1GYPc6wC6v7isKde7jURVQYFGoBVeHcPekRiTAUm7JS7A6KHC.




Remaining Repo Files
--------------------

Other files in the repo demonstrate various aspects of blockchain or cryptography:

GenHash.java    - produce key pair from text seed
GenSig.java     - initially derived from Java tutorial, expanded and re-written
Merkle.java     - simple demonstration of Merkle trees
VerSig.java     - initially derived from Java tutorial, expanded and re-written


References
----------

[1] Satoshi Nakamoto, "Bitcoin: A Peer-to-Peer Electronic Cash System", 2008.
[2] Vitalik Buterin, "A Next Generation Smart Contract & Decentralized Application Platform", 2013.
[3] Satoshi Nakamoto, "Bitcoin script reference implementation" 
    https://github.com/bitcoin/bitcoin/blob/master/src/script/interpreter.cpp
[4] dmitrynizh, "Live FORTH" System (mainly in Russian) http://www.dmitrynizh.com/radio86/baranov.htm


Licence
-------

All code in this Repo is under MIT Licencse. 

Copyright (c) 2018 dmitrynizh

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
